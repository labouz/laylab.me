<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LB</title>
    <link>/</link>
    <description>Recent content on LB</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PostgreSQL and RStudio: I know we match</title>
      <link>/posts/creating-a-database-and-write-from-rstudio/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/creating-a-database-and-write-from-rstudio/</guid>
      <description>


&lt;div id=&#34;a-little-tale&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A Little Tale&lt;/h2&gt;
&lt;p&gt;Recently at work, I was asked to take data that already existed for a specific project and figure out how to standardize it to the Observational Medical Outcomes Partnership (OMOP) &lt;a href=&#34;https://www.ohdsi.org/data-standardization/the-common-data-model/&#34;&gt;Common Data Model&lt;/a&gt; (CDM). Not only did the data have to conform to this CDM but the values in the database must also follow a specific, validated vocabulary. To give you some background, I work at a medical school where I only work with patient level data and I have never had to normalize the data to any kind of standard. Most of the data I deal with have been primarily collected by the investigator’s team and then used for analysis. Rinse and repeat.&lt;/p&gt;
&lt;p&gt;Anyway, after a little (read: a lot) of digging, I think I have it somewhat figured - at least enough so that I can get to work. The OMOP CDM was designed to make disparate clinical data - like the kind I work with - conform in a way that it is easier to perform analysis using standardized tools and share the data and its meaning across applications and business processes. Using a CDM, reduces the pain of having to mush together data from multiple sources and applications. For this particular project, doing that was like forcing pieces of a puzzle together with tape so I am totally on board with a CDM. I think you get the picture, now to the good stuff.&lt;/p&gt;
&lt;p&gt;What I started with was dozens of datasets in SAS and R. Data that have already been harmonized and aggregated. Several hours into “backwards-reading” thousands of lines of code to find original values with the schema and validated lexicon side by side I was able to get an idea of what was required and what we had:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;table_sketches.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Thankfully, OMOP has all the sources I needed to get to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ohdsi.org/web/wiki/doku.php?id=documentation:vocabulary:sidebar&#34;&gt;Standardized vocabularies&lt;/a&gt;&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ohdsi.github.io/TheBookOfOhdsi/&#34;&gt;OHDSI manual&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ohdsi.github.io/TheBookOfOhdsi/CommonDataModel.html#cdm-standardized-tables&#34;&gt;Notes on CDM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://athena.ohdsi.org/search-terms/terms?invalidReason=Valid&amp;amp;standardConcept=Standard&amp;amp;vocabulary=Race&amp;amp;page=1&amp;amp;pageSize=15&amp;amp;query=&#34;&gt;Athena OMOP database (ex. Race)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OHDSI/CommonDataModel&#34;&gt;DDL’s&lt;/a&gt; &lt;em&gt;thank foodness for this&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;BTW Data Defnition Languages (DDLs), if provided, are great as they establish uniformity within your database. In this case, the OMOP has created standards for the tables and fields, the value types and even the constraints for the foreign keys.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-the-omop-cdm-database&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating the OMOP CDM Database&lt;/h2&gt;
&lt;p&gt;Steps (&lt;em&gt;Note: I assume you already have &lt;a href=&#34;https://www.postgresql.org/docs/13/installation.html&#34;&gt;PostgreSQL setup&lt;/a&gt;)&lt;/em&gt; :&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create PostgreSQL database
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open PostgreSQL app
&lt;img src=&#34;open_postgres.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;Double click the database with your name to open the SQL shell
&lt;img src=&#34;postgres_app.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;create database healthdb;&lt;/code&gt;
&lt;img src=&#34;sql_shell.png&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;In a database manager or advanced editor (I &amp;lt;3 &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;), clone the repo that contains the DDL for PostgreSQL: &lt;a href=&#34;https://github.com/OHDSI/CommonDataModel.git&#34; class=&#34;uri&#34;&gt;https://github.com/OHDSI/CommonDataModel.git&lt;/a&gt;. I have a special directory on my machine for repos like this. &lt;img src=&#34;vsc_clone.png&#34; /&gt; &lt;em&gt;The “Source Control” extension comes out of the box when you install VSC for the first time&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add the &lt;code&gt;healthdb&lt;/code&gt; database to VSC by navigating to the PostgreSQL Explorer, pressing the &lt;code&gt;+&lt;/code&gt; button and following the prompts (Make sure you have the PostgreSQL &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ckolkman.vscode-postgres&#34;&gt;extension&lt;/a&gt; for VSC ) You will need to input the credentials you setup when configuring your PostgreSQL application.
&lt;img src=&#34;connect_db.gif&#34; /&gt;&lt;/li&gt;
&lt;li&gt;Once a connection to the &lt;code&gt;healthdb&lt;/code&gt; database has been established, right click the database and select “New Query” and fresh page will appear.&lt;/li&gt;
&lt;li&gt;Navigate to the File Explorer where the contents of the the OHDSI/CommonDataMmodel repository are (or where you have another DDL you’d like to use). Copy and paste the contents of &lt;code&gt;OMOP CDM postgresql ddl.txt&lt;/code&gt;, select all, right-click and select “Run Query” &lt;img src=&#34;run_ddl.gif&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;get-odbc-drivers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Get ODBC Drivers&lt;/h2&gt;
&lt;p&gt;Before we can get to working with data in RStudio, we need to make sure that RStudio can interface with our database. RStudio can do this through Open Database Connection (ODBC) drivers. For the purposes of this project, I will need two specific drivers:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unixodbc.org/&#34;&gt;Unix ODBC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;This is neceessary for *nix users as the POStgres ODBC driver on a Mac requires some confg files that does not come with the “out-of-the-box” installation of the PostgreSQL application for Mac&lt;/li&gt;
&lt;li&gt;Steps:
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Download the driver&lt;/li&gt;
&lt;li&gt;Open terminal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; to downloaded file&lt;/li&gt;
&lt;li&gt;Run these commands:
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;gunzip unixODBC*.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar xvf unixODBC*.tar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd unixODBC-2.3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./configure&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make install&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://odbc.postgresql.org/&#34;&gt;PostgreSQL ODBC&lt;/a&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Select /src and download the latest tarball&lt;/li&gt;
&lt;li&gt;Unzip&lt;/li&gt;
&lt;li&gt;Run &lt;a href=&#34;https://odbc.postgresql.org/docs/unix-compilation.html&#34;&gt;these steps&lt;/a&gt; to install the drivers&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;finally-the-fun-part&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finally, the fun part…&lt;/h2&gt;
&lt;p&gt;Working with a database in RStudio is not so bad - there is a lot of &lt;a href=&#34;https://db.rstudio.com/&#34;&gt;documentation&lt;/a&gt; to help you along. For this part we will only need two packages:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(DBI)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;person-table-specs&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;‘person’ table specs&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;person_id&lt;/code&gt; = 8 digit int&lt;br /&gt;
&lt;code&gt;gender_concept_id&lt;/code&gt; = only two standard concepts: FEMALE (concept_id=8532) and MALE (concept_id=8507)&lt;br /&gt;
&lt;code&gt;year_of_birth&lt;/code&gt; = 4 digit int
&lt;code&gt;month_of_birth&lt;/code&gt; = 1-2 digit int
&lt;code&gt;day_of_birth&lt;/code&gt; = 1-2 digit int
&lt;code&gt;ethnicity_concept_id&lt;/code&gt; = only two categories for data on ethnicity: “Hispanic or Latino” (concept_id=38003563) and “Not Hispanic or Latino” (concept_id=38003564)&lt;br /&gt;
&lt;code&gt;race_concept_id&lt;/code&gt; = “White”(concept_id = 8527), “Black or African American”(concept_id = 8516), “AI/AN”(concept_id = 8657), “Asian”(concept_id = 8515), “NH/PI”(concept_id = 8557)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Creating data for the person table&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;person_id &amp;lt;- runif(100, min = 10000000, max = 99999999) %&amp;gt;% as.integer()
gender_concept_id &amp;lt;- c(8532,8507, NA) %&amp;gt;% as.integer()
year_of_birth &amp;lt;- runif(100, 1945, 1996) %&amp;gt;% as.integer()
month_of_birth &amp;lt;- runif(100, 1, 12) %&amp;gt;% as.integer()
day_of_birth &amp;lt;- runif(100, 1, 30) %&amp;gt;% as.integer()
ethnicity_concept_id &amp;lt;- c(38003563, 38003564, NA) %&amp;gt;% as.integer()
race_concept_id &amp;lt;- c(8527, 8516, 8657, 8515, 8557, NA) %&amp;gt;% as.integer()

#combine it all togather
person &amp;lt;- tibble(person_id = person_id,
                 gender_concept_id = sample(gender_concept_id, 100, replace = TRUE),
                 year_of_birth = year_of_birth,
                 month_of_birth = month_of_birth,
                 day_of_birth = day_of_birth,
                 ethnicity_concept_id = sample(ethnicity_concept_id, 100, replace = TRUE),
                 race_concept_id = sample(race_concept_id, 100, replace = TRUE))

head(person, 25)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 25 x 7
##    person_id gender_concept_… year_of_birth month_of_birth day_of_birth
##        &amp;lt;int&amp;gt;            &amp;lt;int&amp;gt;         &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;
##  1  46992105             8507          1971             11           29
##  2  69233800             8507          1964             10            3
##  3  46455082               NA          1972             10            3
##  4  31190802             8532          1955              6           14
##  5  68929349             8507          1950              5           27
##  6  61393961             8532          1954              8           18
##  7  22828431               NA          1945             10           16
##  8  56101340               NA          1992              9           10
##  9  19499178             8507          1960             10           20
## 10  54433128             8507          1990              2            6
## # … with 15 more rows, and 2 more variables: ethnicity_concept_id &amp;lt;int&amp;gt;,
## #   race_concept_id &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;write-to-healthdb-database&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Write to &lt;code&gt;healthdb&lt;/code&gt; database&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Connect to the default postgres database
con &amp;lt;- dbConnect(RPostgres::Postgres(),
                 dbname = &amp;#39;healthdb&amp;#39;,
                 host = &amp;#39;localhost&amp;#39;,
                 port = 5432,
                 password = rstudioapi::askForPassword(&amp;quot;Database password&amp;quot;),
                 user = &amp;#39;laylabouzoubaa&amp;#39;)
#test connection
# sql &amp;lt;- &amp;quot;SELECT * FROM person&amp;quot;
# x &amp;lt;- dbGetQuery(con, sql) #successfull

#write `person` to db
dbWriteTable(con, name = &amp;quot;person&amp;quot;, value = person, row.names = FALSE, 
             overwrite = TRUE) #success!!!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it! We now have some people in our &lt;code&gt;person&lt;/code&gt; table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;person_table.png&#34; /&gt;
Now to fill in the rest…&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/now/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/now/</guid>
      <description>&lt;h3 id=&#34;the-right-now&#34;&gt;The RIGHT NOW&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;This is page is inspired by: &amp;ldquo;What&amp;rsquo;s up? How&amp;rsquo;s life?&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If anyone&amp;rsquo;s even remotely interested in the above questions, here&amp;rsquo;s what you need to know:&lt;/p&gt;
&lt;p&gt;Ok, it&amp;rsquo;s been a minute, I know. Work has not really calmed down since last we spoke and I am working fewer hours. Why fewer hours? Well, let me take a few steps back&amp;hellip;.&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;in narrator voice&lt;/em&gt;) Previously, on &amp;ldquo;Right NOW&amp;rdquo;, our heroine jumps the  hurdels of beurocracy at the Univrsity of Miami while trying to publish a badass COVID-19 public dashboard. She has since published said Dashboard, turned 29 and decided she was going to go back to school 😲 But why, you ask? Because, she became tired of being the tool and wanted to be the architect. Being a public heath data scientist has brougt her tremendous joy and she grew significanty, thanks to the support of her super-mentors, but there came a point where all young heroins must rise up and fight their own battles.&lt;/p&gt;
&lt;p&gt;Ok, enough of the superhero metaphor, I&amp;rsquo;m really not that dramatic. But yes, in Novemeber I decided that research was my fate and that the only way I was truly going to grow into my own skin was by get those damn three letters after my name - PhD. That&amp;rsquo;s pretty serious for me. I swore after my masters that I was done. What changed? The hell if I know. What I do know is that The Universe has been sending me signs to go for it left and right and I do not ignore signs from The Universe.&lt;/p&gt;
&lt;p&gt;So now I am temporarily working part-time to focus on grad school applications. Work is piling up but 🤷‍♀️ I plan to return to full-time in February once the last of my applications has been submitted but until then, full time workload will have to just take a seat while I power thru. I won&amp;rsquo;t reveal where I&amp;rsquo;ve applied to but that&amp;rsquo;s where my focus has been these past couple months (I&amp;rsquo;ll announce it here when I get decisions!), hence the pause in posts. Not fret, more posts to come.&lt;/p&gt;
&lt;p&gt;In other news, I got a package published to &lt;a href=&#34;https://ctn-0094.github.io/DOPE/&#34;&gt;CRAN&lt;/a&gt; for the first time!! The name is pretty dope.&lt;/p&gt;
&lt;p&gt;In other other news, we celebrated an anniversary and went to Sint Maarten/Saint Martin. ✨IT WAS BEAUTIFUL✨ Highly recommend. I had very minimal worry about COVID while on the island. Because of cruise liners not sailing at the moment, there were significantly less tourists which, I feel, allowed me a much more authentic experience.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/st-maarten.jpg&#34; width=&#34;400px&#34;/&gt; 
&lt;/figure&gt;
 &lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/st-maarten-building.jpg&#34; width=&#34;400px&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/st-maarten-PANO.jpg&#34; width=&#34;1000px&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;That&amp;rsquo;s it for now. Stay tuned&amp;hellip;&lt;/p&gt;
&lt;p&gt;Oh, and because all the cool kids have one&amp;hellip;.&lt;/p&gt;
&lt;style type=&#34;text/css&#34; media=&#34;screen&#34;&gt;
    .gr_grid_container {
        width: 500px;
        display: flex;
        /* customize grid container div here. eg: width: 500px; */
    }
    
    .gr_grid_book_container {
        /* customize book cover container div here */
        float: left;
        width: 98px;
        height: 160px;
        padding: 0px 0px;
        overflow: hidden;
    }
&lt;/style&gt;
&lt;div id=&#34;gr_grid_widget_1600127326&#34;&gt;
    &lt;!-- Show static html as a placeholder in case js is not enabled - javascript include will override this if things work --&gt;
    &lt;h3&gt;
        &lt;a style=&#34;text-decoration: none;&#34; rel=&#34;nofollow&#34; href=&#34;https://www.goodreads.com/review/list/121450152-layla?shelf=currently-reading&amp;utm_medium=api&amp;utm_source=grid_widget&#34;&gt;Currently on my nightstand:&lt;/a&gt;
    &lt;/h3&gt;
    &lt;div class=&#34;gr_grid_container&#34;&gt;
        &lt;div class=&#34;gr_grid_book_container&#34;&gt;
            &lt;a title=&#34;City of Girls&#34; rel=&#34;nofollow&#34; href=&#34;https://www.goodreads.com/book/show/51918871-city-of-girls&#34;&gt;&lt;img alt=&#34;City of Girls&#34; border=&#34;0&#34; src=&#34;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1583203648l/51918871._SX98_.jpg&#34; /&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&#34;gr_grid_book_container&#34;&gt;
            &lt;a title=&#34;Calling Bullshit: The Art of Skepticism in a Data-Driven World&#34; rel=&#34;nofollow&#34; href=&#34;https://www.goodreads.com/book/show/48889983-calling-bullshit&#34;&gt;&lt;img alt=&#34;Calling Bullshit: The Art of Skepticism in a Data-Driven World&#34; border=&#34;0&#34; src=&#34;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1592246867l/48889983._SX98_.jpg&#34; /&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&#34;gr_grid_book_container&#34;&gt;
            &lt;a title=&#34;Algorithms of Oppression: How Search Engines Reinforce Racism&#34; rel=&#34;nofollow&#34; href=&#34;https://www.goodreads.com/book/show/34762552-algorithms-of-oppression&#34;&gt;&lt;img alt=&#34;Algorithms of Oppression: How Search Engines Reinforce Racism&#34; border=&#34;0&#34; src=&#34;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1492944248l/34762552._SX98_.jpg&#34; /&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&#34;gr_grid_book_container&#34;&gt;
            &lt;a title=&#34;How Charts Lie: Getting Smarter about Visual Information&#34; rel=&#34;nofollow&#34; href=&#34;https://www.goodreads.com/book/show/43726576-how-charts-lie&#34;&gt;&lt;img alt=&#34;How Charts Lie: Getting Smarter about Visual Information&#34; border=&#34;0&#34; src=&#34;https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1563764604l/43726576._SX98_.jpg&#34; /&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;noscript&gt;&lt;br/&gt;Share &lt;a rel=&#34;nofollow&#34; href=&#34;/&#34;&gt;book reviews&lt;/a&gt; and ratings with Layla, and even join a &lt;a rel=&#34;nofollow&#34; href=&#34;/group&#34;&gt;book club&lt;/a&gt; on Goodreads.&lt;/noscript&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;script src=&#34;https://www.goodreads.com/review/grid_widget/121450152.Currently%20on%20my%20nightstand:?cover_size=medium&amp;hide_link=true&amp;hide_title=&amp;num_books=20&amp;order=a&amp;shelf=currently-reading&amp;sort=date_added&amp;widget_id=1600127326&#34; type=&#34;text/javascript&#34;
    charset=&#34;utf-8&#34;&gt;
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Scrape this, not that: using rvest to build a database of Champagne</title>
      <link>/posts/scrape-this-not-that-using-rvest-to-build-a-database-of-champagne/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/scrape-this-not-that-using-rvest-to-build-a-database-of-champagne/</guid>
      <description>


&lt;p&gt;So you want to scrape some information from a website? if you’re reading this, I assuming you have a basic understanding of what “scraping” is, so I won’t get into the weeds on the theory but more on the application in R using just a few packages: &lt;code&gt;rvest&lt;/code&gt;, &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;stringr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before I start, let me point you to the &lt;code&gt;rvest&lt;/code&gt; &lt;a href=&#34;%22https://rvest.tidyverse.org/index.html%22&#34;&gt;documentation&lt;/a&gt; for installation and release information .&lt;/p&gt;
&lt;p&gt;Although the documentation is quite comprehensive, I want to go over some very basic HTML definitions that will make your experience go a lot smoother.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elements: These are your main “tags” such as &lt;code&gt;&amp;lt;h1&amp;gt; Heading 1 &amp;lt;/h1&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p&amp;gt; Wine is life.&amp;lt;/p&amp;gt;&lt;/code&gt;. The basic structure of a page is:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  #body of your page
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;rvest::html_nodes()&lt;/code&gt; function is what you will use to specify which elements, specifically the CSS selector. For example, calling &lt;code&gt;html_nodes(myhtmldoc, &#34;.CSS-selector span&#34;) %&amp;gt;% html_text()&lt;/code&gt; will retrieve the text associated with the specified &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. If this doesn’t make sense right away, don’t worry you’ll see an example below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attributes: These provide additional information for the element, such as an image source (&lt;code&gt;src&lt;/code&gt;) or a link’s path (&lt;code&gt;href&lt;/code&gt;). These are usually displayed as key/value pairs, i.e. &lt;code&gt;width=&#34;500&#34;&lt;/code&gt;. You will use &lt;code&gt;rvest::html_attr(&#34;YOUR ATTRIBUTE&#34;)&lt;/code&gt; if you need to get specific details from an attribute.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, it’s a good idea to familiarize yourself with the “Inspect” feature from your browser. This allows your to see the breakdown of any web-page your viewing. This is where you will also find the names for the elements and attributes you want to scrape!&lt;/p&gt;
&lt;p&gt;(pro tip: use the &#34;select element feature to jump directly to the element you’re looking for)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-09-28-scrape-this-not-that-using-rvest-to-build-a-database-of-champagne.en_files/elements_console.png&#34; height=&#34;500&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: &lt;code&gt;rvest&lt;/code&gt; cannot handle JS, it only reads the HTML before JS loaded so some objects may not be possible to scrape with this package. However, if you have the inspect console open in your browser, go to the “Network” tab, refresh the page and try looking for a GET request made to an API (api may be in the URL). This is data stored in a JSON file which can be read using &lt;code&gt;jsonlite::fromJSON()&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Don’t get intimidated. It’s quite simple. Here, let me show you:&lt;/p&gt;
&lt;div id=&#34;scrape-the-details-of-a-specific-wine&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scrape the details of a specific wine&lt;/h3&gt;
&lt;p&gt;I want to know the details of this pretty &lt;a href=&#34;https://www.totalwine.com/wine/champagne-sparkling-wine/champagne/rose/champagne-lallier-grand-rose/p/171403750?&#34;&gt;Champagne Rose from Lallier&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(rvest)

path &amp;lt;- &amp;quot;https://www.totalwine.com/wine/champagne-sparkling-wine/champagne/rose/champagne-lallier-grand-rose/p/171403750?&amp;quot;

#details table - brand, country/state, region, wine type, varietal, style, taste, body, sku
details &amp;lt;- read_html(path) %&amp;gt;% 
  html_nodes(&amp;quot;.detailsTableLabel__kj9FI2Mq, .detailsTableText__1SvcRdYn&amp;quot;) %&amp;gt;% #the two element names of the details table separated by a &amp;quot;,&amp;quot;
  html_text() #extract the text&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above code chunk returns a character vector of length 40. Well, that’s not really helpful. It would be nice to clean this up into a nice tidy format. We are going to make a it a wide table in preparation of row-binding more wines in a subsequent step ;)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#convert the table to a dataframe and make it wide with clean names  
details_df &amp;lt;- tibble(label = details[seq(1,18,2)], #the label of the data piece is every other odd string in the vector
         text = details[seq(2,18,2)]) %&amp;gt;% #the data piece itself is every other even string in the vector
  tidyr::pivot_wider(names_from = label, values_from = text) %&amp;gt;% #make the labels the colnames
  rename_with(.cols = everything(), .fn = janitor::make_clean_names) #remove any slashes, dash or other bad characters, make lower, and snake_case&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See, that wasn’t so bad! Now, we don’t want this information for just one wine. What if we wanted to collect this information on all Champagnes offered through Total Wine? Simple, my friend - we’ll wrap it in a function!&lt;/p&gt;
&lt;p&gt;First we need to get the paths for all Champagnes by going to &lt;a href=&#34;www.totalwine.com&#34;&gt;totalwine.com&lt;/a&gt; and extract the particular element that corresponds to sparkling wines - specifically Champagnes.&lt;/p&gt;
&lt;p&gt;This is where a little manual searching is required (read &lt;em&gt;easier&lt;/em&gt;). After going to the site, selecting Wine &amp;gt; Champagne &amp;amp; Sparkling Wine we are left with 706 results. But, we are interested in Champagnes so that will require clicking on the “Champagne” filter under “Varietal &amp;amp; Type”. &lt;em&gt;I want you to notice how the path in the URL bar changes - that’s exactly what you want.&lt;/em&gt; Pages whose paths do not change when any filtering/action is done are called single page applications (SAP) and are not very easy to scrape. Thankfully, this doesn’t apply to us. Thankfully, it seems like Total Wine has a pretty solid database where each chunk of the path is another table being indexed.&lt;/p&gt;
&lt;p&gt;Filtering, brought us down to 235 results. This is more than one page so our first step will be to extract all the paths for each of the 235 Champagnes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#for simplicity, I&amp;#39;ve expanded the &amp;quot;items per page&amp;quot; option from 24(default) to 120
#page 1 out of 2 -- path not the same for page 2 
wine_paths_pg1 &amp;lt;- read_html(&amp;quot;https://www.totalwine.com/wine/champagne-sparkling-wine/c/000005?viewall=true&amp;amp;pageSize=120&amp;amp;varietaltype=Champagne&amp;quot;) %&amp;gt;% 
  html_nodes(&amp;quot;.productImg__3fOOgAmO a&amp;quot;) %&amp;gt;% #the a is to indicate we want specifically an &amp;lt;a&amp;gt; tag - for hyperlinks
  html_attr(&amp;quot;href&amp;quot;) %&amp;gt;% 
  tibble(&amp;quot;path&amp;quot; = .)
wine_paths_pg2 &amp;lt;- read_html(&amp;quot;https://www.totalwine.com/wine/champagne-sparkling-wine/c/000005?viewall=true&amp;amp;page=2&amp;amp;pageSize=120&amp;amp;varietaltype=Champagne&amp;quot;) %&amp;gt;% 
  html_nodes(&amp;quot;.productImg__3fOOgAmO a&amp;quot;) %&amp;gt;% #the a is to indicate we want specifically an &amp;lt;a&amp;gt; tag - for hyperlinks
  html_attr(&amp;quot;href&amp;quot;) %&amp;gt;% 
  tibble(&amp;quot;path&amp;quot; = .)

#bind the 1st page to 2nd page
wine_paths &amp;lt;- bind_rows(wine_paths_pg1, wine_paths_pg2) #this returns 197/235 paths...this is really good as some requests may return null&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s get those details!&lt;/p&gt;
&lt;p&gt;We will take the code chunk up above and wrap it in a function but use the path as the argument&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#details table - brand, country/state, region, wine type, varietal, style, taste, body, sku
get_details &amp;lt;- function(path){
details &amp;lt;- read_html(paste0(&amp;quot;https://www.totalwine.com&amp;quot;,path)) %&amp;gt;% #paste the the first part of the URL to the Champagne specific path
  html_nodes(&amp;quot;.detailsTableLabel__kj9FI2Mq, .detailsTableText__1SvcRdYn&amp;quot;) %&amp;gt;% 
  html_text() 

#convert the table to a dataframe and make it wide with clean names  
details_df &amp;lt;- tibble(label = details[seq(1,18,2)], 
         text = details[seq(2,18,2)]) %&amp;gt;% 
  tidyr::pivot_wider(names_from = label, values_from = text) %&amp;gt;% 
  rename_with(.cols = everything(), .fn = janitor::make_clean_names) 
}

champagne_df &amp;lt;- purrr::map_dfr(wine_paths$path, get_details)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Et voila! Une belle base de donnees de Champagne! Sante!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The API and I - Exposing a Plumber API</title>
      <link>/posts/the-api-and-i-exposing-a-pluber-api/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/the-api-and-i-exposing-a-pluber-api/</guid>
      <description>


&lt;p&gt;If you had asked me two years ago to use and API in my scripts, much less develop and deploy them, I probably would have hid under
my desk. Well, I probably wouldn’t have actually hid, but I would have wanted to. Developing APIs can seem quite daunting at first, but I promise, it’s really not. If &lt;em&gt;I&lt;/em&gt; can do it &lt;em&gt;YOU&lt;/em&gt; definitely can!&lt;/p&gt;
&lt;p&gt;I am going to show how to build an API, first and then expose it in less than 5 minutes, are you ready?!&lt;/p&gt;
&lt;p&gt;First a little on APIs to get your head in the right place. 🤓&lt;/p&gt;
&lt;div id=&#34;what-is-an-api&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What is an API?&lt;/h3&gt;
&lt;div id=&#34;application-programming-interface&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface&lt;/h4&gt;
&lt;p&gt;In short, it allows a user to programatically pull data from a source given that source provides one&lt;br /&gt;
&lt;em&gt;ex. The NYT, Twitter, Facebook, Google, US Census&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;how-does-it-work&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How Does it Work?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Think of it like this, just like a Graphical User Interface (GUI) allows you to interact with your code, an API lets your code interact with other code&lt;/li&gt;
&lt;li&gt;Set of commands, functions, objects, and protocols
&lt;ul&gt;
&lt;li&gt;used to create software or interact with an external system (databases)&lt;/li&gt;
&lt;li&gt;everywhere!&lt;/li&gt;
&lt;li&gt;convenient- ready-made code to simplify the life of a programmer&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;not-only-for-getting-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Not Only for Getting Data&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Build APIs for your ML models so others can use them&lt;/li&gt;
&lt;li&gt;Write (post) to a database
&lt;ul&gt;
&lt;li&gt;and update (put) and delete (delete)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Functions
&lt;ul&gt;
&lt;li&gt;more control over what is exposed to end user&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay, enough of that, let’s build one shall we?? 😉&lt;/p&gt;
&lt;p&gt;Lucky for us, &lt;code&gt;plumber&lt;/code&gt; makes this step &lt;em&gt;really&lt;/em&gt; easy! I’m not going to go into the weeds of the details. The documentation does a really good job at this, so why be redundant!? We’re here for the part after that!
FYI:&lt;br /&gt;
📦: &lt;code&gt;plumber&lt;/code&gt;&lt;br /&gt;
📖: &lt;a href=&#34;https://www.rplumber.io/&#34; class=&#34;uri&#34;&gt;https://www.rplumber.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here, we want to expose an API that returns a dynamic plot using &lt;code&gt;ggplot2::ggplot()&lt;/code&gt; and &lt;code&gt;plotly::ggplotly()&lt;/code&gt;, specifically we are plotting the distribution of our favorite &lt;code&gt;mtcars$cyl&lt;/code&gt; data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Wait, a couple steps back. Why are we exposing and not deploying? And what is exposing, anyways?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Good question, when you run a service such as an API or a Shiny app, for example, locally on your computer, you are running it as a server behind the scenes. You can access it through your browser by typing &lt;code&gt;localhost:portNumber&lt;/code&gt;. &lt;em&gt;Exposing&lt;/em&gt; your service is when we make this internal address (localhost) available on the internet. We are exposing whatever service on the particular port by giving it an external(public) URL.&lt;/p&gt;
&lt;p&gt;Why would we do this? Well, if you are building models or various other objects meant for production, it would be a bit of a pain to constantly build and re-deploy, especially during the beginning stages when you are more prone to bugs. You could really piss off some engineers that way! Exposing your API is a good way to test before you deploy to your production server 😊&lt;/p&gt;
&lt;p&gt;So, let’s get to it! Let’s start with our API:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(plotly)
#* Plot a dynamic histogram
#* @serializer htmlwidget
#* @get /plotly
function(){
  data(mtcars)
  x &amp;lt;- ggplot(mtcars, aes(x = as.factor(cyl))) +
    geom_bar(fill= c(&amp;quot;#8245BF&amp;quot;, &amp;quot;#05F29B&amp;quot;, &amp;quot;#F2CB05&amp;quot;)) +
    theme_minimal() +
    labs(x = &amp;quot;cylinders&amp;quot;)

  ggplotly(x)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run your API locally just save the above script somewhere you can find it and run the following two commands in the console:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plumber)
r &amp;lt;- plumb(&amp;quot;plumber.R&amp;quot;)
r$run(port = 8000) #this will run your api on localhost, port: 8000.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you run this you will get a screen like this from swagger:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-07-08-the-api-and-i-exposing-a-pluber-api.en_files/api_swagger.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;FYI, your local address will be localhost:8000/plotly&lt;/p&gt;
&lt;div id=&#34;now-to-the-fun-part&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Now to the fun part!&lt;/h4&gt;
&lt;p&gt;For exposing our API, we will use a service called &lt;a href=&#34;https://ngrok.com/download&#34;&gt;ngrok&lt;/a&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;You will have to create an account, this is how you will get your authentication token. The easiest would to authenticate is with your GitHub account, if you have one.&lt;/li&gt;
&lt;li&gt;Download the installation for your operating system&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-07-08-the-api-and-i-exposing-a-pluber-api.en_files/ngrok_download.png&#34; width=&#34;600&#34; /&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open your terminal&lt;/li&gt;
&lt;li&gt;Unzip the ngrok installation files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into that directory and authenticate the application (see picture below)
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;./ngrok authtoken YOUR-AUTH-TOKEN&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-07-08-the-api-and-i-exposing-a-pluber-api.en_files/ngrok_auth.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now it’s time to expose your API! 😎&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Hopefully, you still have the localhost served. If not, just run &lt;code&gt;r$run(port=8000)&lt;/code&gt; again and you should be good.&lt;/li&gt;
&lt;li&gt;Open your terminal again. Make sure you’re in the directory where you unzipped ngrok (Applications, for me) and run &lt;code&gt;./ngrok http 8000&lt;/code&gt; and that’s it! You have now exposed port 8000 on your computer. If all went well, you should get a screen like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-07-08-the-api-and-i-exposing-a-pluber-api.en_files/ngrok_expose.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now, all you have to do is share! Copy and paste the “Forwarding” URL and add the path to your API and send it out for testing!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2020-07-08-the-api-and-i-exposing-a-pluber-api.en_files/ngrok_plotly.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>&lt;h3 id=&#34;this-is-me-layla-b-&#34;&gt;This is me, Layla B 👋&lt;/h3&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/pic01.jpeg&#34; height=&#34;325px&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;The not so boring stuff:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Freshly transplanted Miamian, originally from Atlanta, GA&lt;/p&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/pic02.jpg&#34; width=&#34;200px&#34;/&gt; 
&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Daughter of two wonderful Moroccans 🇲🇦, &lt;a href=&#34;https://www.linkedin.com/in/alain-bouzouba-51894950/&#34;&gt;Al&lt;/a&gt; and Mounira, and sister of &lt;a href=&#34;https://www.linkedin.com/in/zinebbouzoubaa/&#34;&gt;Zineb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Raised in the &lt;a href=&#34;http://www.sevengablesrestaurant.com/&#34;&gt;restaurant&lt;/a&gt; biz&lt;/p&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/pic04.jpg&#34; width=&#34;300px&#34;/&gt; 
&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I have a low-key plant addiction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-proclaimed wine connoisseur and food critic&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/pic05.jpg&#34; width=&#34;300px&#34;/&gt; 
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Aspire to one day build an oasis by the sea, which will house an overabundance of animals, fancy wines, and horticulture, and where I will frequently host dinner parties and woo my guests with my exceptional piano playing and culinary skills!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;I like hats 🎩&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I am a statistical programmer for the University of Miami &lt;a href=&#34;https://twitter.com/SylvesterCancer&#34;&gt;Sylvester Comprehensive Cancer Center&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I organize the Miami chapter of &lt;a href=&#34;https://www.meetup.com/rladies-miami/&#34; title=&#34;R-Ladies Meetup&#34;&gt;R-Ladies&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am a &lt;a href=&#34;https://www.womentechmakers.com/ambassadors/layla-bouzoubaa&#34;&gt;Women Techmakers Ambassador&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I facilitate &lt;a href=&#34;https://iamremarkable.withgoogle.com/&#34;&gt;#IamRemarkable&lt;/a&gt; workshops&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am an organizer of &lt;a href=&#34;https://www.meetup.com/GDG-Miami/&#34;&gt;GDG Miami&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am a leader of the &lt;a href=&#34;https://tenoriofoundation.org&#34;&gt;Tenorio Foundation&lt;/a&gt; Miami Team&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/rl.png&#34; width=&#34;80px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/wtm.png&#34; width=&#34;112px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/iar.png&#34; width=&#34;150px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/gdg-miami.png&#34; width=&#34;180px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;center-inline&#34;&gt;
    &lt;img src=&#34;/images/stackedDiagonal.png&#34; width=&#34;200px&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Facet ggplots While Preserving Unique Order</title>
      <link>/posts/facet-ggplots-while-preserving-order/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/facet-ggplots-while-preserving-order/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;!-- &lt;style type=&#34;text/css&#34;&gt; --&gt;
&lt;!-- .main-container { --&gt;
&lt;!--   max-width: 1500px; --&gt;
&lt;!--   margin-left: auto; --&gt;
&lt;!--   margin-right: auto; --&gt;
&lt;!-- } --&gt;
&lt;!-- pre { --&gt;
&lt;!-- border: 0; --&gt;
&lt;!-- } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;div id=&#34;data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;This document goes through the step by step of how ggplots, faceted by race, were able to preserve the order of a specific measure, uniqely.&lt;/p&gt;
&lt;p&gt;For reference here is what I’m talking about: &lt;a href=&#34;http://10.64.183.96:3939/LB_explore_prmcScore/&#34; class=&#34;uri&#34;&gt;http://10.64.183.96:3939/LB_explore_prmcScore/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let’s continue…&lt;/p&gt;
&lt;p&gt;First, we need some data. For these graphs, I used the &lt;em&gt;theRatesByCounty_df&lt;/em&gt;. This dataframe includes the age-adjusted incidence rates, counts, and percent late stage at diagnosis for every combination of geography, race/ethnicity (NHW, NHB, Hispanic, all), and lifestage (youth, adult, senior, all).&lt;/p&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:data&#34;&gt;Table 1: &lt;/span&gt;theRatesByCounty_df
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
crudeRate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
adjRate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
lci
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
uci
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
site
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
siteNum
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
place_num
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
sex
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
race
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
count
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
ratePop
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pop
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
lifeStage
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pLateStage
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
place
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2124.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2130.03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2055.19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2207.01
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All_Races
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3104
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29225
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31895
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Senior
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4391108
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
336.99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
357.99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
344.19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
372.27
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All_Races
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2733
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
162199
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
161909
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adult
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4548116
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19.13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18.45
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13.87
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24.20
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All_Races
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60652
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
62777
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Youth
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5689655
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
467.72
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
484.55
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
471.98
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
497.40
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All_Races
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5895
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
252076
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
256581
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4476675
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1226.04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1252.24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
974.98
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1592.43
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hispanic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
71
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1158
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1326
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Senior
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4788732
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
125.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
207.45
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
165.72
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
256.65
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hispanic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
90
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14376
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14416
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adult
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4777778
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hispanic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6486
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7337
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Youth
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NaN
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
152.58
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
285.88
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
242.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
336.78
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hispanic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
168
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22021
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23079
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4761905
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2035.59
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2067.90
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1872.33
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2279.43
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NHB
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
421
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4136
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4529
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Senior
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4608076
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
349.59
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
367.12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
335.99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400.73
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
All
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 1cm; &#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
P
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NHB
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
531
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30379
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30667
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Adult
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5216573
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Alachua County
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Cool. 😎&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

# I only want to look at Sylvester catchment area
sylRates &amp;lt;- theRatesByCounty_df %&amp;gt;% 
   filter(place_num == 888)

# I don&amp;#39;t care about a particular lifestage nor do I care about all cancers as a
# whole or other cancers aside from the 19 we&amp;#39;ve marked as important
prevalence &amp;lt;- sylRates %&amp;gt;% 
  filter(lifeStage == &amp;quot;All&amp;quot;, !site %in% c(&amp;quot;All&amp;quot;,&amp;quot;Other&amp;quot;)) %&amp;gt;%
  #also, for the sake of the graphics, I want the percentage to be pretty
  mutate(pLateStage = round(pLateStage*100,1)) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;it-started-with-a-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;It Started With a Plot…&lt;/h3&gt;
&lt;p&gt;I wanted to start off by showing the counts for the 19 different cancers for &lt;em&gt;all races&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f &amp;lt;- prevalence %&amp;gt;%  
  filter(sex == &amp;quot;P&amp;quot;, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% #sex == &amp;quot;people&amp;quot;
  ggplot(aes(x = site, y = count))

f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
  coord_flip() +
  geom_text(aes(label = count), hjust = -0.4, color = &amp;quot;black&amp;quot;,
            position = position_dodge(width = 1), size = 2) +
  labs(x = &amp;quot;Site&amp;quot;,
       y = &amp;quot;Count&amp;quot;) +
  ggtitle(&amp;quot;Count of 19 Cancers by Site&amp;quot;) +
  theme_light() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/ggplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That’s cool but, I want to order this by most frequent to less frequent so that means I need to make site a factor and because there are 4 different race/ethnicity categories, I also need to make sure each race has it’s own order. Therefore, I need to &lt;code&gt;group_by()&lt;/code&gt; race and &lt;code&gt;arrange()&lt;/code&gt; by race and count.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_sexes &amp;lt;- prevalence %&amp;gt;% 
  filter(sex == &amp;quot;P&amp;quot;) %&amp;gt;%   # sex == &amp;quot;people&amp;quot;
  group_by(race) %&amp;gt;% 
  arrange(race, count) %&amp;gt;% 
  mutate(site = factor(site, levels = unique(site)))

#let&amp;#39;s try making a plot for just &amp;quot;All_Races&amp;quot;
f &amp;lt;- filter(all_sexes, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
  ggplot(aes(x = site, y = count))

f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
  coord_flip() +
  geom_text(aes(label = count), hjust = -0.4, color = &amp;quot;black&amp;quot;,
            position = position_dodge(width = 1), size = 2) +
  labs(x = &amp;quot;Site&amp;quot;,
       y = &amp;quot;Count&amp;quot;) +
  ggtitle(&amp;quot;Count of 19 Cancers by Site&amp;quot;) +
  theme_light() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/ggplot_fact-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Yippee!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, I need to replicate this plot for not only all 19 cancers, but the top 5 cancers, the top 5 cancers by each race group, the cancers that are caused by viruses, and the cancers caused by viruses for each race group. Not only do I want to look at the counts, but I also want these plots for the percent late stage at diagnosis and for the age-adjusted incidence rates…oh, $#!@.&lt;/p&gt;
&lt;p&gt;That’s 15 different plots and if you know me, there’s no way in hell I am copying and pasting this crap 15 times…&lt;/p&gt;
&lt;p&gt;Red rover, red rover, please send a function right over :)&lt;/p&gt;
&lt;p&gt;This didn’t seem &lt;em&gt;terribly&lt;/em&gt; intimidating at first, the only arguments I needed was which measure I wanted to plot: count, adjusted rate, or percent late stage and if I wanted to filter the data on just the cancers that were caused by viruses.&lt;/p&gt;
&lt;p&gt;The reason why I say terribly is because I had an inkling there would probably be some NSE involved here because I would need to pipe my data to &lt;code&gt;arrange()&lt;/code&gt; on the &lt;em&gt;measure&lt;/em&gt; argument, follwed by a ggplot. All tidyverse functions that take unquoted arguments. So, I thought “ok, first I need turn my argument to a quosure, and then unquote when I call it in either my dplyr verbs or ggplot geoms”. Here’s what that looked like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stringr)

makeGraphs &amp;lt;- function(measure, virus = FALSE) {
  
  measureText &amp;lt;- str_to_sentence(measure)
  quo_measure &amp;lt;- enquo(measure)
  
  all_sexes &amp;lt;- prevalence %&amp;gt;% 
    filter(sex == &amp;quot;P&amp;quot;) %&amp;gt;% 
    group_by(race) %&amp;gt;% 
    arrange(race, !!quo_measure) %&amp;gt;%
    mutate(site= factor(site, levels = unique(site), ordered = TRUE))
  
  
  if(virus == FALSE){
    f &amp;lt;- filter(all_sexes, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes(x = site, y = !!quo_measure))
    
    allcancers &amp;lt;- f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
      coord_flip() +
      geom_text(aes(label = !!quo_measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of 19 Cancers by Site &amp;quot;)) +
      theme_light() 
    
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;This did &lt;em&gt;NOT&lt;/em&gt; work.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sigh…after a couple hours of falling down the rabbit hole of Stack Overflow and the &lt;em&gt;tidyeval&lt;/em&gt; vignette, I gave up on this option. Fortunately, those hours were not spent in vain. I did stumble accross a potential solution where I use a bit of tidy (thanks to &lt;code&gt;rlang&lt;/code&gt; version &amp;gt;= 0.4) and base, as such:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stringr)

makeGraphs &amp;lt;- function(measure, virus = FALSE) {
  
  measureText &amp;lt;- str_to_sentence(measure)
  
  all_sexes &amp;lt;- prevalence %&amp;gt;% 
    filter(sex == &amp;quot;P&amp;quot;) %&amp;gt;% 
    group_by(race) %&amp;gt;% 
    arrange(race, .data[[measure]]) %&amp;gt;%  # .data is now recognized as a way to refer to the parent data frame, so reference by string works - like in base
    ungroup() %&amp;gt;% 
    mutate(site= factor(site, levels = unique(site), ordered = TRUE))
  
  
  if(virus == FALSE){
    f &amp;lt;- filter(all_sexes, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure)) 
    
    f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of 19 Cancers by Site &amp;quot;)) +
      theme_light() 
    
  }
}

makeGraphs(&amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/func2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WOOP!&lt;/strong&gt;…progress. Now to turn this into a full function that will produce and save all 15 graphics!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stringr)

makeGraphs &amp;lt;- function(measure, virus = FALSE) {
  
  measureText &amp;lt;- str_to_sentence(measure)
  
  all_sexes &amp;lt;- prevalence %&amp;gt;% 
    filter(sex == &amp;quot;P&amp;quot;) %&amp;gt;% 
    group_by(race) %&amp;gt;% 
    arrange(race, .data[[measure]]) %&amp;gt;%  
    ungroup() %&amp;gt;% 
    mutate(site= factor(site, levels = unique(site), ordered = TRUE))
  
  
  if(virus == FALSE){
    f &amp;lt;- filter(all_sexes, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure)) 
    
    allcancers &amp;lt;- f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of 19 Cancers by Site &amp;quot;)) +
      theme_light() 
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText, &amp;quot;_allcancers.png&amp;quot;))
    
    # just breast, colorectal, lung, prostate, cervical
    
    all_sexes_five_cancer &amp;lt;- filter(all_sexes, site %in% c(&amp;quot;Prostate&amp;quot;, &amp;quot;Colorectal&amp;quot;, &amp;quot;Breast&amp;quot;, &amp;quot;Cervix&amp;quot;, 
                                &amp;quot;Lung &amp;amp; Bronchus&amp;quot;))
    
    
    g &amp;lt;- filter(all_sexes_five_cancer, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;%
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    topCancer &amp;lt;- g + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#F39C12&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Most Prevalent Cancers by Site &amp;quot;)) +
      theme_light()
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_topCancer.png&amp;quot;))
    
    # facet by race
    h &amp;lt;-  ggplot(all_sexes_five_cancer, aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    topCancerRace &amp;lt;- h + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#9B59B6&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.1, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Most Prevalent Cancers by Site &amp;amp; Race&amp;quot;)) +
      theme_light() +
      facet_wrap(&amp;quot;race&amp;quot;, scales = &amp;quot;free&amp;quot;)
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_topCancerRace.png&amp;quot;))
    
    list(allcancers, topCancer, topCancerRace)
    
  }else{
    # just cancers caused by viruses
    
    virus &amp;lt;- filter(all_sexes, site %in% c(&amp;quot;Anal&amp;quot;, &amp;quot;Non-Hodgkin Lymphoma&amp;quot;, &amp;quot;Liver&amp;quot;, 
                                   &amp;quot;Oral &amp;amp; Oropharynx&amp;quot;, &amp;quot;Cervix&amp;quot;, 
                                   &amp;quot;Stomach&amp;quot;))
    
    #just all_races
    
    i &amp;lt;- filter(virus, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;%
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    virusCancer &amp;lt;- i + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#F0B27A&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Cancers Caused by Viruses&amp;quot;)) +
      theme_light()
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_virusCancer.png&amp;quot;))
    
    # facet by race
    
    i &amp;lt;-  ggplot(virus, aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    virusCancerRace &amp;lt;- i + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#9B59B6&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.1, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Cancers Caused by Viruses by Race&amp;quot;)) +
      theme_light() +
      facet_wrap(&amp;quot;race&amp;quot;, scales = &amp;quot;free&amp;quot;)
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_virusCancerRace.png&amp;quot;))
    
    list(virusCancer, virusCancerRace)
  }
}

makeGraphs(&amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/func3-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/func3-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/func3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now, this made me excited at first &lt;em&gt;until&lt;/em&gt; I noticed that when I facted by race, the order of the levels for site remained fixed, regardless of race. The order for the “All_Races” group was getting recycled. &lt;em&gt;This&lt;/em&gt; is where the headache, more cursing, and thoughts of running away and never coming back started to creep in.&lt;/p&gt;
&lt;p&gt;How can I facet on race yet still preserve the order of site per each race group???&lt;/p&gt;
&lt;p&gt;* &lt;em&gt;In the Spongebob narrator voice&lt;/em&gt; * A few hours later…. I gave up and went home.&lt;/p&gt;
&lt;p&gt;Then in the middle of the night I awoke with an idea…as most annoying problems tend to do. Faceting fixes the y axis so I can’t use this. I will need to create 4 individual plots and join them into 1 for easier comparison.&lt;/p&gt;
&lt;p&gt;I was advised to try &lt;code&gt;par()&lt;/code&gt; or &lt;code&gt;layout()&lt;/code&gt; but then learned that these functions are not compatible with ggpolot - only plot functions.&lt;/p&gt;
&lt;p&gt;Again, there’s no way I’m going to copy and paste each ggplot code 4 times - one that filters for each race group…I feel another function coming on.&lt;/p&gt;
&lt;p&gt;Better yet, &lt;code&gt;map()&lt;/code&gt; to the rescue!&lt;/p&gt;
&lt;p&gt;What if I listed the race categories and passed that to a map which contained a function that filtered the data by the race and drew the plot? So let’s try this one mo’gain (don’t judge, I’m a Georgia girl, born and bred).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggpubr) # for arranging the individual race plots to one

makeGraphs &amp;lt;- function(measure, virus = FALSE) {
  
  measureText &amp;lt;- str_to_sentence(measure)
  
  all_sexes &amp;lt;- prevalence %&amp;gt;% 
    filter(sex == &amp;quot;P&amp;quot;) %&amp;gt;% 
    group_by(race) %&amp;gt;% 
    arrange(race, .data[[measure]]) %&amp;gt;%  
    ungroup() %&amp;gt;% 
    mutate(site= factor(site, levels = unique(site), ordered = TRUE))
  
  
  if(virus == FALSE){
    f &amp;lt;-  filter(all_sexes, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    allcancers &amp;lt;- f + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#2ECC71&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of 19 Cancers by Site &amp;quot;)) +
      theme_light() 
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText, &amp;quot;_allcancers.png&amp;quot;))
    
    # just breast, colorectal, lung, prostate, cervical
    
    all_sexes_five_cancer &amp;lt;- filter(all_sexes, site %in% c(&amp;quot;Prostate&amp;quot;, &amp;quot;Colorectal&amp;quot;, &amp;quot;Breast&amp;quot;, &amp;quot;Cervix&amp;quot;, 
                                &amp;quot;Lung &amp;amp; Bronchus&amp;quot;))
    
    
    g &amp;lt;-  filter(all_sexes_five_cancer, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    topCancer &amp;lt;- g + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#F39C12&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Most Prevalent Cancers by Site &amp;quot;)) +
      theme_light()
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_topCancer.png&amp;quot;))
    
    # facet by race
    races &amp;lt;- list(&amp;quot;All_Races&amp;quot;, &amp;quot;NHW&amp;quot;, &amp;quot;NHB&amp;quot;, &amp;quot;Hispanic&amp;quot;)
    
    raceGraphs &amp;lt;- map(races, function(x){
      h &amp;lt;-  all_sexes_five_cancer %&amp;gt;% 
        filter(race == x) %&amp;gt;% 
        arrange(race, .data[[measure]]) %&amp;gt;%  
        mutate(site= factor(site, levels = unique(site), ordered = TRUE)) %&amp;gt;% 
        ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
      
      h + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#9B59B6&amp;quot;) +
        coord_flip() +
        geom_text(aes_string(label = measure), hjust = -0.1, color = &amp;quot;black&amp;quot;,
                  position = position_dodge(width = 1), size = 2) +
        labs(x = &amp;quot;Site&amp;quot;,
             y = measureText) +
        ggtitle(x) +
        theme_light()+
        theme(plot.title = element_text(size = 10, color = &amp;quot;#B03A2E&amp;quot;, hjust = 1),
              plot.margin = margin(0,0,0,0))
      
    })
    
    h &amp;lt;- ggarrange(
      raceGraphs[[1]] + rremove(&amp;quot;x.title&amp;quot;),
      raceGraphs[[2]] + rremove(&amp;quot;y.title&amp;quot;) + rremove(&amp;quot;x.title&amp;quot;),
      raceGraphs[[3]],
      raceGraphs[[4]] + rremove(&amp;quot;y.title&amp;quot;),
      ncol = 2, nrow = 2
    )
    
    topCancerRace &amp;lt;- annotate_figure(h, fig.lab = paste0(measureText,&amp;quot; of Most Prevalent Cancers&amp;quot;),
                                     fig.lab.face = &amp;quot;bold&amp;quot;)
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_topCancerRace.png&amp;quot;))
    
    list(allcancers, topCancer, topCancerRace)
  }else{
    # just cancers caused by viruses
    
    virus &amp;lt;- filter(all_sexes, site %in% c(&amp;quot;Anal&amp;quot;, &amp;quot;Non-Hodgkin Lymphoma&amp;quot;, &amp;quot;Liver&amp;quot;, 
                                   &amp;quot;Oral &amp;amp; Oropharynx&amp;quot;, &amp;quot;Cervix&amp;quot;, 
                                   &amp;quot;Stomach&amp;quot;))
    
    
    i &amp;lt;-  filter(virus, race == &amp;quot;All_Races&amp;quot;) %&amp;gt;% 
      ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
    
    virusCancer &amp;lt;- i + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#F0B27A&amp;quot;) +
      coord_flip() +
      geom_text(aes_string(label = measure), hjust = -0.4, color = &amp;quot;black&amp;quot;,
                position = position_dodge(width = 1), size = 2) +
      labs(x = &amp;quot;Site&amp;quot;,
           y = measureText) +
      ggtitle(paste0(measureText,&amp;quot; of Cancers Caused by Viruses by Site&amp;quot;)) +
      theme_light()
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_virusCancer.png&amp;quot;))
    
    # facet by race
    races &amp;lt;- list(&amp;quot;All_Races&amp;quot;, &amp;quot;NHW&amp;quot;, &amp;quot;NHB&amp;quot;, &amp;quot;Hispanic&amp;quot;)
    
    raceGraphs &amp;lt;- map(races, function(x){
      j &amp;lt;-  virus %&amp;gt;% 
        filter(race == x) %&amp;gt;% 
        arrange(race, .data[[measure]]) %&amp;gt;%  
        mutate(site= factor(site, levels = unique(site), ordered = TRUE)) %&amp;gt;% 
        ggplot(aes_string(x = &amp;quot;site&amp;quot;, y = measure))
      
      j + geom_bar(position = &amp;quot;dodge&amp;quot;, stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#BB8FCE&amp;quot;) +
        coord_flip() +
        geom_text(aes_string(label = measure), hjust = -0.1, color = &amp;quot;black&amp;quot;,
                  position = position_dodge(width = 1), size = 2) +
        labs(x = &amp;quot;Site&amp;quot;,
             y = measureText) +
        ggtitle(x) +
        theme_light()+
        theme(plot.title = element_text(size = 10, color = &amp;quot;#E74C3C&amp;quot;, hjust = 1),
              plot.margin = margin(0,0,0,0))
    })
    
    j &amp;lt;- ggarrange(
      raceGraphs[[1]] + rremove(&amp;quot;x.title&amp;quot;),
      raceGraphs[[2]] + rremove(&amp;quot;y.title&amp;quot;) + rremove(&amp;quot;x.title&amp;quot;),
      raceGraphs[[3]],
      raceGraphs[[4]] + rremove(&amp;quot;y.title&amp;quot;),
      ncol = 2, nrow = 2
    )
    
    virusCancerRace &amp;lt;- annotate_figure(j, fig.lab = paste0(measureText,&amp;quot; of Cancers Caused by Viruses by Site&amp;quot;),
                                       fig.lab.face = &amp;quot;bold&amp;quot;)
    
    # ggsave(paste0(&amp;quot;./images/&amp;quot;, measureText,&amp;quot;_virusCancerRace.png&amp;quot;))
    
    list(virusCancer, virusCancerRace)
  }
  
  
}

makeGraphs(&amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/workingFunc-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/workingFunc-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/workingFunc-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;makeGraphs(&amp;quot;adjRate&amp;quot;, virus = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/workingFunc-4.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/posts/2019-07-12-facet-ggplots-while-preserving-order_files/figure-html/workingFunc-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;YAASSSS!!!&lt;/strong&gt;…purrring in contentment ;)&lt;/p&gt;
&lt;p&gt;*Note: I’ve commented out the ggsaves for the sake of making sure I don’t screw up what I already have&lt;/p&gt;
&lt;p&gt;I hope what went through my head effectively made it through my fingers, onto the keyboard, and on the screen into this document in an intelligible way.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>&lt;p&gt;Follow me, @johndoe.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First snippet</title>
      <link>/snippets/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/snippets/first/</guid>
      <description>&lt;p&gt;This content is in &lt;code&gt;snippets/first/index.md&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Passion Projects &amp; Talks</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#projects&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#passion-talks&#34;&gt;Passion Talks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;projects&#34;&gt;Projects&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;University of Miami COVID-19 Dashboard - Aug 2020 - Ongoing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coronavirus.miami.edu/dashboard&#34;&gt;https://coronavirus.miami.edu/dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/ekobetz@miami.edu&#34;&gt;Erin Kobetz, Ph.D&lt;/a&gt; - University of Miami&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/ElieserNodarse&#34;&gt;Elieser Nodarse&lt;/a&gt; - University of Miami&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ObsContenCOVID – Apr 2020 - Oct 2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://observcovid.miami.edu/&#34;&gt;http://observcovid.miami.edu/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/fknaul@miami.edu&#34;&gt;Felicia Knaul, Ph.D&lt;/a&gt; – University of Miami&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tomateloapecho.org.mx/Cvs/Hector_Arreola.php&#34;&gt;Hector Arreola&lt;/a&gt; - Anahuac University, MX&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/mxt725@miami.edu&#34;&gt;Michael Touchton, Ph.D&lt;/a&gt; - University of Miami&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://albertocairo.com/&#34;&gt;Alberto Cairo, Ph.D&lt;/a&gt; - University of Miami&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/rrb28@miami.edu&#34;&gt;Raymond Balise, Ph.D&lt;/a&gt; – University of Miami&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Press: &lt;a href=&#34;https://www.publichealth.med.miami.edu/news/news-releases/2020/observatory/index.html&#34;&gt;https://www.publichealth.med.miami.edu/news/news-releases/2020/observatory/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web platform to visualize the adoption of public policy towards COVID-19 in Mexico and further, across Latin America&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sexual Network Mapping – 2019 - 2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;Ariana Johnson – University of Miami&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/mkanamori@med.miami.edu&#34;&gt;Mariano Kanamori, Ph.D&lt;/a&gt; – University of Miami&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Investigate the spread of HIV in South Florida through various common and novel methods including the use of social media (Twitter, Reddit) to assess sentiment towards safe-sex practices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EMS Naloxone Administrations to Youth – 2019 - 2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/lgwynn@miami.edu&#34;&gt;Lisa Gwynn, M.D.&lt;/a&gt; – University of Miami - Pediatrics&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/mxm2674@miami.edu&#34;&gt;Michael Maurer, M.D.&lt;/a&gt; – University of Miami – Pediatrics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To understanding how and where youth are overdosing on opioids across the U.S.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Risk of Cancer Death Among White, Black, and Hispanic Populations in South Florida - 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOI: &lt;a href=&#34;https://www.cdc.gov/pcd/issues/2019/18_0529.htm&#34;&gt;10.5888/pcd16.180529&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/pxp464@miami.edu&#34;&gt;Paulo Pinheiro, Ph.D&lt;/a&gt; – University of Miami&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To analyze the age-adjusted cancer mortality rate among Hispanic and African population sub-groups in South Florida&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Impact of Immediate Salvage Surgery on Corporeal Length Preservation in Patients Presenting with Penile Implant Infections - 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOI: &lt;a href=&#34;https://www.auajournals.org/doi/10.1016/j.juro.2018.01.082&#34;&gt;10.1016/j.juro.2018.01.082&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.miami.edu/profile/bkava@miami.edu&#34;&gt;Bruce Kava, M.D.&lt;/a&gt; – University of Miami - Urology&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Describing the Breast Cancer Rates Among Women in Homestead, FL – 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;Natalia Rodriguez, Ph.D – University of Miami&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cancer Patterns &amp;amp; Trends in Costa Rica – 2018-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://labouz.shinyapps.io/costa-rica/&#34;&gt;https://labouz.shinyapps.io/costa-rica/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.researchgate.net/profile/Omar_Picado_Roque&#34;&gt;Omar Picado Roque, M.D.&lt;/a&gt; – University of Miami&lt;/li&gt;
&lt;li&gt;Costa Rica Ministry of Health – Costa Rica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To visualize cancer incidence and mortality across 10 different cancers over 5 years for the country of Costa Rica and the individual States.
&lt;ul&gt;
&lt;li&gt;Work was done as part of a Sylvester CCC Global Oncology Grant&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An emergent, high-fatality lung disease in systemic juvenile arthritis – 2017-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOI: &lt;a href=&#34;https://www.medrxiv.org/content/10.1101/19002923v1&#34;&gt;10.1136/annrheumdis-2019-216040&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Key Collaborators:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://profiles.stanford.edu/vivian-saper&#34;&gt;Vivian Saper, M.D&lt;/a&gt; – Stanford University&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To investigate characteristics and risk factors of a novel parenchymal lung disease, increasingly detected in systemic juvenile idiopathic arthritis (sJIA)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;passion-talks&#34;&gt;Passion Talks&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://joinmayshad.com/event/women-data-science-9-18-20/&#34;&gt;Mayshad #BWYWTB Series: Women in Data Science&lt;/a&gt; - Live Stream - 2020&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dikayodata.com/datafemme/algorithmsofoppression&#34;&gt;Whose Knowledge Gets To Be Saved&lt;/a&gt; – Data Femme Podcast – Online – 2020&lt;/li&gt;
&lt;li&gt;Women in Data Science – Panelist - General Assembly Boston – Boston, MA - Online – 2020&lt;/li&gt;
&lt;li&gt;#IamRemarkable Workshop – UM DPHS Students/Alumni - 2020&lt;/li&gt;
&lt;li&gt;Tearing Down Barriers to Publication – FIU – Miami, FL - 2020&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/labouz/introRmd&#34;&gt;Communicating with RMarkdown&lt;/a&gt; – R-Ladies Miami – Miami, FL - 2020&lt;/li&gt;
&lt;li&gt;Ethics in AI – Panelist - General Assembly Miami – Fort Lauderdale, FL – 2020&lt;/li&gt;
&lt;li&gt;#IamRemarkable Workshop – UM Toppel Career Center - 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dikayodata.com/datafemme/data-is-liquid-gold&#34;&gt;Data is Liquid Gold&lt;/a&gt; – Data Femme Podcast – Online – 2019&lt;/li&gt;
&lt;li&gt;#IamRemarkable Workshop – UM DPHS Students/Alumni - 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/12tEKjk2QcSoJykeMddfRp-DTHMUt5qgf/view&#34;&gt;Data Science Pipeline on the Google Cloud Platform&lt;/a&gt;- DevFest Miami – Miami, FL - 2019&lt;/li&gt;
&lt;li&gt;Tech in Practice - Panelist - Girls Who Code South Florida – Miami, FL - 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rladiesmiami/meetups/tree/master/vCtrl_wrkFlw_LB_20190316&#34;&gt;Version Control with RStudio&lt;/a&gt; – R-Ladies Miami – Miami, FL - 2019&lt;/li&gt;
&lt;li&gt;Visualizing Neighborhood Data with Shiny – R in Medicine – New Haven, CT - 2018&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Second snippet</title>
      <link>/snippets/second/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/snippets/second/</guid>
      <description>&lt;p&gt;This content is in &lt;code&gt;snippets/second/index.md&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ls -la
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
